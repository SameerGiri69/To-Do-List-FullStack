[
  {
    "ContainingType": "test.Controllers.AccountController",
    "Method": "Login",
    "RelativePath": "api/account/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "test.DTOs.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "test.Controllers.AccountController",
    "Method": "Logout",
    "RelativePath": "api/account/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "test.Controllers.AccountController",
    "Method": "Register",
    "RelativePath": "api/account/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDto",
        "Type": "test.DTOs.RegisterUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "test.Controllers.UserTasksController",
    "Method": "Create",
    "RelativePath": "api/task/create-task",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tasksDto",
        "Type": "test.DTOs.CreateUserTasksDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "test.Controllers.UserTasksController",
    "Method": "DeleteTask",
    "RelativePath": "api/task/delete-task",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "test.Controllers.UserTasksController",
    "Method": "EditTask",
    "RelativePath": "api/task/edit-task",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "editDto",
        "Type": "test.DTOs.EditTaskDto",
        "IsRequired": true
      },
      {
        "Name": "taskId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "test.Controllers.UserTasksController",
    "Method": "GerUserTasks",
    "RelativePath": "api/task/get-tasks",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "test.Controllers.UserTasksController",
    "Method": "SetIsCompleted",
    "RelativePath": "api/task/set-iscompleted",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "test.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[test.WeatherForecast, api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]